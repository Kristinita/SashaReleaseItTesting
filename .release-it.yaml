##############
# release-it #
##############
# release-it — automated versioning:
# https://www.npmjs.com/package/release-it
# All settings:
# https://github.com/release-it/release-it/blob/master/conf/release-it.json
# Hooks:
# https://www.npmjs.com/package/release-it#hooks
# [NOTE] Use “.yaml”, not “.yml” extension, when possible:
# https://interviewbubble.com/solved-yaml-or-yml-which-do-we-prefer/
# GitLab Flow:
# https://docs.gitlab.com/ee/workflow/gitlab_flow.html
# https://habr.com/ru/company/softmart/blog/316686/
# Simple Git workflow (Atlassian):
# https://www.atlassian.com/blog/archives/simple-git-workflow-simple
# https://ru.stackoverflow.com/a/573773/199934
# [NOTE] I don't use GitFlow, it for big projects:
# https://datasift.github.io/gitflow/IntroducingGitFlow.html
# All release-it options:
# https://github.com/release-it/release-it/blob/master/conf/release-it.json
# [INFO] Hooks:
# https://github.com/release-it/release-it#hooks
hooks:
  # [INFO][YAML] Block notation for multiline:
  # https://stackoverflow.com/a/49685727/5951529
  # [WARNING] Comments must be before first command, otherwise YAML will be errored;
  # https://github.com/yaml/yaml/issues/49
  # Compare:
  # http://yaml-online-parser.appspot.com/?yaml=yaml%3A%0A++%23+Comment%0A++Kira%0A++Goddess%0A&type=json
  # http://yaml-online-parser.appspot.com/?yaml=yaml%3A+%0A++Kira%0A++%23+Comment%0A++Goddess%0A&type=json
  # [INFO][STAGE] Before “git add . --all”:
  before:bump:
    # [INFO] Append changes to top of CHANGELOG.md:
    # https://kristinita.netlify.com/it-articles/fastest-way-to-add-new-version-of-sublime-text-3-package#buildCommand
    changelog -f - > CHANGELOG.md
  # [INFO] Merge branches with commit, use “-no-ff”:
  # https://ru.stackoverflow.com/a/573773/199934
  # [INFO][STAGE] After “git add . --all”:
  before:release:
    # [INFO] Commit and push CHANGELOG changes:
    # [INFO] Overwrite master branch from SashaDevelop branch:
    # https://stackoverflow.com/a/2763118/5951529
    # https://github.com/Kristinita/SashaGitHub/commit/016ea890a1f8a7facfb357e2f244c22ee5aff94c
    # [LEARN][GIT] Merge previous branch:
    # https://coderwall.com/p/klr_pq/checkout-merge-previous-branch
    # [NOTE] Checkout force required, because you can have an error:
    # “error: Your local changes to the following files would be overwritten by checkout”
    # https://stackoverflow.com/a/32556166/5951529
    git commit -m "Changelog ${version}" &&
    git push origin HEAD &&
    git merge --no-ff --strategy=ours master &&
    git checkout -f master &&
    git merge --no-ff -
  # [INFO][STAGE] Run after all actions
  # [INFO] Return to dev branch:
  # [LEARN][GIT] Checkout to previous branch:
  # https://marcgg.com/blog/2015/10/18/git-checkout-minus/
  # https://stackoverflow.com/a/33199051/5951529
  after:release: git checkout -
git:
  # [INFO] Must be “true” in my case;
  # I update “CHANGELOG.md” (and maybe another files), that must be tracked:
  # https://github.com/release-it/release-it/issues/233
  addUntrackedFiles: true
  # [INFO] Output, that will be in tag page, example:
  # https://github.com/Kristinita/SashaReleaseItTesting/releases/tag/st3-0.1.5
  changelog: changelog -f -
  # [INFO] Check, that all files added and commited, if no — error:
  # “ERROR Working dir must be clean.”
  # https://github.com/release-it/release-it/blob/master/docs/prerequisites.md#clean-working-directory
  # [NOTE] Useless option, if “addUntrackedFiles”: true
  # requireCleanWorkingDir: true
  # [INFO] That prevent blank commits:
  # https://github.com/release-it/release-it/blob/master/docs/recipes/require-commits.md
  # https://github.com/release-it/release-it/blob/master/docs/prerequisites.md#no-commits
  requireCommits: true
  # [NOTE] Required:
  # “ERROR No upstream configured for current branch.”
  # I run release-it in dev branch, that not upstream.
  # https://github.com/release-it/release-it/blob/master/docs/prerequisites.md#upstream-branch
  requireUpstream: false
  # [INFO] Use for Sublime Text packages releases; don't change value of this key for another releases:
  # https://github.com/wbond/package_control/issues/1217#issuecomment-280041797
  tagName: st3-%s
github:
  release: true
  # [INFO] “GITHUB_TOKEN” environment variable:
  # https://kristinita.netlify.com/it-articles/fastest-way-to-add-new-version-of-sublime-text-3-package#Another-lines
  tokenRef: GITHUB_TOKEN
# [INFO] Don't publish to NPM, if your package not for Node.js:
npm:
  publish: false
